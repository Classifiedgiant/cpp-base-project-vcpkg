# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Multi Platform Build and Test

on:
  workflow_call:
    inputs:
      create_package:
        required: true
        type: boolean
      package_tag:
        required: false
        type: string
        default: "not_set"

  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.config.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false
      matrix:
        # Original values
        #os: [ubuntu-latest, windows-latest]
        # build_type: [Release]
        #c_compiler: [gcc, clang, cl]
        config:
          - os: ubuntu-latest
            vcpkg_triplet: x64-linux-release
          - os: windows-latest
            vcpkg_triplet: x64-windows-release
          - os: macos-latest
            vcpkg_triplet: x64-osx-release

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-tags: true


    - name: vcpkg build
      uses: johnwason/vcpkg-action@v6
      id: vcpkg
      with:
        manifest-dir: ${{ github.workspace }}
        triplet: ${{ matrix.config.vcpkg_triplet }}
        cache-key: ${{ matrix.config.os }}
        token: ${{ github.token }}
        github-binarycache: true

    - name: Generate Project via CMake
      run: cmake ${{ steps.vcpkg.outputs.vcpkg-cmake-config }} -B build

    - name: Build
      run: cmake --build ./build

    - name: Create Package For Windows
      if: ${{ success() && matrix.os == 'windows-latest' && inputs.create_package }}
      run: cpack --config ${{github.workspace}}\build\CPackConfig.cmake

    - name: Create Package For MacOS
      if: ${{ success() && matrix.os == 'macos-latest' && inputs.create_package }}
      run: cpack --config ${{github.workspace}}/build/Release/CPackConfig.cmake

    - name: Upload Artifact For Windows
      if: ${{ success() && matrix.os == 'windows-latest' && inputs.create_package }}
      uses: actions/upload-artifact@v4
      with:
        name: artifact-${{matrix.os}}
        path: "${{github.workspace}}/*.zip"
        if-no-files-found: error

    - name: Upload Artifact For Macos
      if: ${{ success() && matrix.os == 'macos-latest' && inputs.create_package }}
      uses: actions/upload-artifact@v4
      with:
        name: artifact-${{matrix.os}}
        path: "${{github.workspace}}/*.tar.gz"
        if-no-files-found: error
